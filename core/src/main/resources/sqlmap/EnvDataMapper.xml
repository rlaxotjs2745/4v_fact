<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.fact.core.model.EnvDataMapper">

    <select id="getGuyokDataForConsoleDashboard" parameterType="kr.or.fact.core.model.DTO.ParamEnvQueryVO" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT
            SUBSTR(B.YMDT, 15, 16) AS YMDTIME,
               AVG(XINTEMP1) AS XINTEMP1,
               AVG(XINHUM1) AS XINHUM1
        FROM (
               SELECT
                      SUBSTR(YMDTIME, 0, 16) AS YMDT,
                      AVG(XINTEMP1) AS XINTEMP1,
                      AVG(XINHUM1) AS XINHUM1
               FROM TB_ENV_DATA
               WHERE GUYOK=#{guyok}
                 AND TO_DATE(YMDTIME, 'YYYY-MM-DD HH24:MI:SS') BETWEEN #{from_date} AND #{to_date}
               GROUP BY YMDTIME
           ) B
        GROUP BY B.YMDT ORDER BY B.YMDT ASC
    </select>

    <select id="getGuyokAVGDataEachTenMin" parameterType="kr.or.fact.core.model.DTO.ParamEnvQueryVO" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT *
        FROM (
        SELECT SUBSTR(YMDTIME, 1, 10) as dt,
        CASE
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '10' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':00')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '10' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '20' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':10')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '20' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '30' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':20')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '30' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '40' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':30')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '40' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '50' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':40')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '50' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '60' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':50')
        END AS hhmm,
            ROUND(AVG(XINTEMP1),2) AS XINTEMP1,
               ROUND(AVG(XINTEMP2),2) AS XINTEMP2,


            ROUND(AVG(XINHUM1),2) AS XINHUM1,
               ROUND(AVG(XGNDTEMP),2) AS XGNDTEMP,
               ROUND(AVG(XGNDHUM),2) AS XGNDHUM,
            ROUND(AVG(XCO2),2) AS XCO2,
            ROUND(AVG(XWATERTEMP),2) AS XWATERTEMP,
               ROUND(AVG(XWATERTEMP2),2) AS XWATERTEMP2,
               ROUND(AVG(XDHUM),2) AS XDHUM,



            ROUND(AVG(XOUTTEMP),2) AS XOUTTEMP,
               ROUND(AVG(XWINDDIREC),2) AS XWINDDIREC,
               ROUND(AVG(XWINDSP),2) AS XWINDSP,
               ROUND(AVG(XSUNVOL),2) AS XSUNVOL,
               ROUND(AVG(XSUNADD),2) AS XSUNADD,

            ROUND(AVG(XVENTTEMP),2) AS XVENTTEMP,
                ROUND(AVG(XHEATTEMP),2) AS XHEATTEMP,
               ROUND(AVG(XABHUM),2) AS XABHUM,

               ROUND(AVG(XSKYVOL1)) AS XSKYVOL1,
               ROUND(AVG(XSKYVOL2)) AS XSKYVOL2,
               ROUND(AVG(XCUR1VOL)) AS XCUR1VOL,
               ROUND(AVG(XCUR2VOL)) AS XCUR2VOL,
               ROUND(AVG(XCUR3VOL)) AS XCUR3VOL,

               ROUND(AVG(X3WAY1VOL)) AS X3WAY1VOL,
               ROUND(AVG(X3WAY2VOL)) AS X3WAY2VOL,

               ROUND(AVG(XEC1)) AS XEC1,
               ROUND(AVG(XEC2)) AS XEC2,
               ROUND(AVG(XPH1)) AS XPH1,
               ROUND(AVG(XPH2)) AS XPH2


        FROM TB_ENV_DATA ENV
        WHERE GUYOK=#{guyok} AND TO_DATE(YMDTIME, 'YYYY-MM-DD HH24:MI:SS') BETWEEN #{from_date} AND #{to_date}
        GROUP BY SUBSTR(YMDTIME, 1, 10),
        CASE
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '10' then CONCAT(SUBSTR(YMDTIME, 12, 2), ':00')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '10' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '20' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':10')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '20' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '30' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':20')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '30' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '40' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':30')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '40' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '50' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':40')
        WHEN SUBSTR(YMDTIME, 15, 2) <![CDATA[>=]]> '50' AND SUBSTR(YMDTIME, 15, 2) <![CDATA[<]]> '60' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':50')
        END
        ORDER BY dt DESC
        )
        WHERE ROWNUM<![CDATA[<=]]> 20

    </select>





    <select id="getEnvDataTotalCount" resultType="int">
        SELECT COUNT (*) FROM TB_ENV_DATA
    </select>
    <select id="getEachGHEnvDataTotalCount" parameterType="kr.or.fact.core.model.DTO.ParamPageListFilteredVO" resultType="int">
        SELECT COUNT (*) FROM TB_ENV_DATA WHERE GUYOK=#{filter1}
    </select>

    <select id="getEnvData" parameterType="kr.or.fact.core.model.DTO.ParamPageListFilteredVO" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT
            *
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
        ,A.*
                 FROM (
                          SELECT * FROM TB_ENV_DATA
                          WHERE GUYOK=#{filter1}

                          ORDER BY IDX_TB_ENV_DATA DESC
                      ) A
                 WHERE ROWNUM <![CDATA[<=]]> #{cur_page}*#{list_amount}
             )
        WHERE ROW_NUM <![CDATA[>]]> (#{cur_page} -1)*#{list_amount}
    </select>

    <select id="getEachGHEnvData" parameterType="kr.or.fact.core.model.DTO.ParamPageListFilteredVO" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT
            *
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
        ,A.*
                 FROM (
                          SELECT * FROM TB_ENV_DATA
                          WHERE GUYOK=#{filter1}

                          ORDER BY IDX_TB_ENV_DATA DESC
                      ) A
                 WHERE ROWNUM <![CDATA[<=]]> #{cur_page}*#{list_amount}
             )
        WHERE ROW_NUM <![CDATA[>]]> (#{cur_page} -1)*#{list_amount}
    </select>


    <select id="getEachTimeGHEnvData" parameterType="kr.or.fact.core.model.DTO.ParamPageListFilteredVO" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT
            *
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
        ,A.*
                 FROM (
                          SELECT * FROM TB_ENV_DATA
                          WHERE GUYOK=#{filter1}

                          ORDER BY IDX_TB_ENV_DATA DESC
                      ) A
                 WHERE ROWNUM <![CDATA[<=]]> #{cur_page}*#{list_amount}
             )
        WHERE ROW_NUM <![CDATA[>]]> (#{cur_page} -1)*#{list_amount}
    </select>


    <select id="getExternalEnvData" parameterType="kr.or.fact.core.model.DTO.RangeVO" resultType="kr.or.fact.core.model.DTO.ExternalEnvVO">
        SELECT
        *
        FROM (
        SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
        ,IDX_TB_ENV_DATA,YMDTIME,XOUTTEMP,XWINDDIREC,XRAIN
        FROM (
        SELECT * FROM TB_ENV_DATA

        ORDER BY IDX_TB_ENV_DATA DESC
        )
        WHERE ROWNUM <![CDATA[<=]]> #{start}*#{amount}
        )
        WHERE ROW_NUM <![CDATA[>]]> (#{start} -1)*#{amount}
    </select>
    <select id="getRootZoneEnvData" parameterType="kr.or.fact.core.model.DTO.RangeVO" resultType="kr.or.fact.core.model.DTO.RootZoneEnvVO">
        SELECT
            *
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
        ,IDX_TB_ENV_DATA,FARM_CD,YMDTIME,XCO2,XGNDTEMP,XGNDHUM,XPH1,XPH2,XEC1,XEC2
                 FROM (
                          SELECT * FROM TB_ENV_DATA

                          ORDER BY IDX_TB_ENV_DATA DESC
                      )
                 WHERE ROWNUM <![CDATA[<=]]> #{start}*#{amount}
             )
        WHERE ROW_NUM <![CDATA[>]]> (#{start} -1)*#{amount}
    </select>
    <select id="getInternalEnvData" parameterType="kr.or.fact.core.model.DTO.RangeVO" resultType="kr.or.fact.core.model.DTO.InternalEnvVO">
        SELECT
            *
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
        ,IDX_TB_ENV_DATA,FARM_CD,GUYOK,YMDTIME,XINTEMP1,XINTEMP2,XINTEMP3,XABHUM,XINHUM1,XINHUM2,XINHUM3,XCO2,XSUNVOL,XDHUM
                 FROM (
                          SELECT * FROM TB_ENV_DATA

                          ORDER BY IDX_TB_ENV_DATA DESC
                      )
                 WHERE ROWNUM <![CDATA[<=]]> #{start}*#{amount}
             )
        WHERE ROW_NUM <![CDATA[>]]> (#{start} -1)*#{amount}
    </select>

    <select id="getGuyokDataFromEnvData" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT
            *
        FROM TB_ENV_DATA
        WHERE (GUYOK, IDX_TB_ENV_DATA) IN (
            SELECT GUYOK, MAX(IDX_TB_ENV_DATA) AS IDX_TB_ENV_DATA
            FROM TB_ENV_DATA A GROUP BY GUYOK
        )
        ORDER BY GUYOK ASC
    </select>
    <select id="getGuyokData" resultType="kr.or.fact.core.model.DTO.FarmVO">
        SELECT
            *
        FROM TB_ENV_DATA
        WHERE (GUYOK, IDX_TB_ENV_DATA) IN (
            SELECT GUYOK, MAX(IDX_TB_ENV_DATA) AS IDX_TB_ENV_DATA
            FROM TB_ENV_DATA A GROUP BY GUYOK
        )
        ORDER BY GUYOK ASC
    </select>

    <update id="updateGuyokData" parameterType="kr.or.fact.core.model.DTO.FarmVO">
        UPDATE TB_FARM SET
                              FARM_CD = #{farm_cd},
                              YMDTIME_DT = #{ymdtime_dt},
                              XINTEMP = #{xintemp},
                              XINTEMP1 = #{xintemp1},
                              XINTEMP2 = #{xintemp2},
                              XINTEMP3 = #{xintemp3},
                              XINHUM = #{xinhum},
                              XINHUM1 = #{xinhum1},
                              XINHUM2 = #{xinhum2},
                              XINHUM3 = #{xinhum3},
                              XGNDTEMP = #{xgndtemp},
                              XGNDHUM = #{xgndhum},
                              XWATERTEMP = #{xwatertemp},
                              XDHUM = #{xdhum},
                              XCO2 = #{xco2},
                              XOUTTEMP = #{xouttemp},
                              XWINDDIREC = #{xwinddirec},
                              XWINDSP = #{xwindsp},
                              XSUNVOL = #{xsunvol},
                              XSUNADD = #{xsunadd},
                              XRAIN = #{xrain},
                              XVENTTEMP = #{xventtemp},
                              XHEATTEMP = #{xheattemp},
                              XSTHUM = #{xsthum},
                              XABHUM = #{xabhum},
                              XHUMLACK = #{xhumlack},
                              XVENTTEMP2 = #{xventtemp2},
                              XCO2SET = #{xco2set},
                              XVENTCONT = #{xventcont},
                              XHEATCONT = #{xheatcont},
                              XSKYVOL1 = #{xskyvol1},
                              XSKYVOL2 = #{xskyvol2},
                              XDUALVOL1 = #{xdualvol1},
                              XDUALVOL2 = #{xdualvol2},
                              XSIDEVOL1 = #{xsidevol1},
                              XSIDEVOL2 = #{xsidevol2},
                              XCUR1VOL = #{xcur1vol},
                              XCUR2VOL = #{xcur2vol},
                              XCUR3VOL = #{xcur3vol},
                              XCUR4VOL = #{xcur4vol},
                              X3WAY1VOL = #{x3way1vol},
                              X3WAY2VOL = #{x3way2vol},
                              XSKYAUTO = #{xskyauto},
                              XDUALAUTO = #{xdualauto},
                              XSIDEAUTO = #{xsideauto},
                              XCUR1AUTO = #{xcur1auto},
                              XCUR2AUTO = #{xcur2auto},
                              XCUR3AUTO = #{xcur3auto},
                              XCUR4AUTO = #{xcur4auto},
                              X3WAY1AUTO = #{x3way1auto},
                              X3WAY2AUTO = #{x3way2auto},
                              XSPRAYAUTO = #{xsprayauto},
                              XCO2AUTO = #{xco2auto},
                              XSPAUTO = #{xspauto},
                              XHEATERAUTO = #{xheaterauto},
                              XLIGHTAUTO = #{xlightauto},
                              XHUNAUTO = #{xhunauto},
                              XBOAUTO = #{xboauto},
                              XPUMPAUTO = #{xpumpauto},
                              XFAN1AUTO = #{xfan1auto},
                              XFAN2AUTO = #{xfan2auto},
                              XSPRAYRUN = #{xsprayrun},
                              XCO2RUN = #{xco2run},
                              XSPRUN = #{xsprun},
                              XHEATERRUN = #{xheaterrun},
                              XLIGHTRUN = #{xlightrun},
                              XHUNRUN = #{xhunrun},
                              XBORUN = #{xborun},
                              XPUMPRUN = #{xpumprun},
                              XFAN1RUN = #{xfan1run},
                              XFAN2RUN = #{xfan2run},
                              XVENTCONT2 = #{xventcont2},
                              XVENTRST = #{xventrst},
                              XVENT2RST = #{xvent2rst},
                              XHEATRST = #{xheatrst},
                              XWATERTEMP2 = #{xwatertemp2},
                              XJUNGJUN = #{xjungjun},
                              XLOGON = #{xlogon},
                              XRETURN1 = #{xreturn1},
                              XRETURN2 = #{xreturn2},
                              XEC1 = #{xec1},
                              XEC2 = #{xec2},
                              XPH1 = #{xph1},
                              XPH2 = #{xph2},
                              GUYOK = #{guyok},
                              HITEMP = #{hitemp},
                              LOTEMP = #{lotemp},
                              LAST_UPD_DATE = SYSDATE

                WHERE IDX_FARM = #{idx_farm}
    </update>

</mapper>