<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.fact.core.model.EventContentMapper">

    <select id="getMainEventContentCount" resultType="int">
        SELECT COUNT(*) FROM TB_EVENT_CONTENT  WHERE IS_MAIN_PAGE=1
    </select>

    <select id="getWebpageEventContentCount" resultType="int">
        SELECT COUNT(*) FROM TB_EVENT_CONTENT  WHERE IS_SHOW=1 AND EVENT_CONTENT_STATUS=1
    </select>

    <select id="getEventContentList" parameterType="hashmap" resultType="kr.or.fact.core.model.DTO.EventContentVO">
        SELECT
            IDX_EVENT_CONTENT,
                EVENT_CONTENT_CODE,
            EVENT_CONTENT_NUM,
            SUBJECT,
            IS_FILE,
            IS_NEW,
            IS_MAIN_PAGE,
            IS_IMPORTANT,
            IS_SHOW,
            VIEW_COUNT,
            EVENT_CONTENT_STATUS,
            EVENT_START_DATE,
            EVENT_END_DATE,
            DOC_VERSION,
            MEMO,
            SEARCH_TAG,
            AUTHOR,
            THUMB_IMG_FILE_IDX,
            IDX_ADMIN,
            CONFIRM_ADMIN_IDX,
            REG_DATE,
            LAST_UPD_DATE
        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by EVENT_CONTENT_NUM ASC) AS row_num
        ,IDX_EVENT_CONTENT,
                        EVENT_CONTENT_CODE,
                        EVENT_CONTENT_NUM,
                        SUBJECT,
                        IS_FILE,
                        IS_NEW,
                        IS_MAIN_PAGE,
                        IS_IMPORTANT,
                        IS_SHOW,
                        VIEW_COUNT,
                        EVENT_CONTENT_STATUS,
                        EVENT_START_DATE,
                        EVENT_END_DATE,
                        DOC_VERSION,
                        MEMO,
                        SEARCH_TAG,
                        AUTHOR,
                        THUMB_IMG_FILE_IDX,
                        IDX_ADMIN,
                        CONFIRM_ADMIN_IDX,
                        REG_DATE,
                        LAST_UPD_DATE
                 FROM (
                          SELECT * FROM TB_EVENT_CONTENT ORDER BY EVENT_CONTENT_NUM ASC
                      )

                 WHERE ROWNUM <![CDATA[<=]]> #{page}*#{list_amount}
             )
        WHERE row_num <![CDATA[>]]> (#{page} -1)*#{list_amount}
    </select>

    <select id="getMainEventContentList" parameterType="hashmap" resultType="kr.or.fact.core.model.DTO.EventContentVO">
        SELECT * FROM TB_EVENT_CONTENT  WHERE  IS_MAIN_PAGE=1
    </select>
    <select id="getEventList" parameterType="hashmap" resultType="kr.or.fact.core.model.DTO.EventContentVO">
        SELECT * FROM TB_EVENT_CONTENT  ORDER BY EVENT_CONTENT_NUM
    </select>

    <insert id="insertEventContent" parameterType="kr.or.fact.core.model.DTO.EventContentVO">
INSERT INTO TB_EVENT_CONTENT (
IDX_EVENT_CONTENT,
EVENT_CONTENT_CODE,
EVENT_CONTENT_NUM,
SUBJECT,
EVENT_CONTENTS,
IS_FILE,
IS_NEW,
IS_MAIN_PAGE,
IS_IMPORTANT,
IS_SHOW,
VIEW_COUNT,
EVENT_CONTENT_STATUS,
EVENT_START_DATE,
EVENT_END_DATE,
DOC_VERSION,
MEMO,
SEARCH_TAG,
AUTHOR,
THUMB_IMG_FILE_IDX,
IDX_ADMIN,
CONFIRM_ADMIN_IDX,
REG_DATE,
LAST_UPD_DATE
)VALUES (
SEQ_EVENT_CONTENT.NEXTVAL,
#{event_content_code},
#{event_content_num},
#{subject},
#{event_contents},
#{is_file},
#{is_new},
#{is_main_page},
#{is_important},
#{is_show},
#{view_count},
#{event_content_status},
#{event_start_date},
#{event_end_date},
#{doc_version},
#{memo},
#{search_tag},
#{author},
#{thumb_img_file_idx},
#{idx_admin},
#{confirm_admin_idx},
SYSDATE,
#{last_upd_date}


        )

    </insert>
    <select id="getEventContentByIdx" parameterType="long" resultType="kr.or.fact.core.model.DTO.EventContentVO">
        SELECT *
        FROM TB_EVENT_CONTENT WHERE IDX_EVENT_CONTENT = #{idx_event_content}
    </select>
    <delete id="deleteEvent" parameterType="int">
        DELETE FROM TB_EVENT_CONTENT WHERE IDX_EVENT_CONTENT = #{idx_event_content}
    </delete>
</mapper>