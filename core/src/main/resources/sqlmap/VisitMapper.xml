<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.fact.core.model.VisitMapper">

    <select id="getUserVisitReqCount" parameterType="long" resultType="int">
        SELECT COUNT(*) FROM TB_VISIT_REQ  WHERE IDX_USER = #{idx_user}
    </select>

    <select id="getVisitList" resultType="kr.or.fact.core.model.DTO.VisitReqVO">
        SELECT
            idx_row_num,
            IDX_VISIT_REQ,
            VISIT_REQ_NUM,
            GROUP_NAME,
            VISITOR,
            RESULVATION_DATE,
            VISITOR_COUNT,
            VISITOR_MPHONE_NUM,
            VISITOR_EMAIL,
            VISITOR_ADRESS,
            VISIT_GOAL,
            QUESTION,
            VISIT_REQ_STATUS,
            IS_PRIVACY_ACCEPT,
            IS_GROUP,
            IS_CANCEL,
            IS_MANAGER,
            IDX_MANAGER,
            IS_DURATION,
            DURATION_AMOUNT,
            MEMO,
            IDX_VISIT_DATA,
            IDX_USER,
            IDX_ADMIN,
            REG_DATE
        FROM (
            SELECT * FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by #{order_field} DESC) AS idx_row_num
                    , IDX_VISIT_REQ
                    , VISIT_REQ_NUM
                    , GROUP_NAME
                    , VISITOR
                    , RESULVATION_DATE
                    , VISITOR_COUNT
                    , VISITOR_MPHONE_NUM
                    , VISITOR_EMAIL
                    , VISITOR_ADRESS
                    , VISIT_GOAL
                    , QUESTION
                    , VISIT_REQ_STATUS
                    , IS_PRIVACY_ACCEPT
                    , IS_GROUP
                    , IS_CANCEL
                    , IS_MANAGER
                    , IDX_MANAGER
                    , IS_DURATION
                    , DURATION_AMOUNT
                    , MEMO
                    , IDX_VISIT_DATA
                    , IDX_USER
                    , IDX_ADMIN
                    , REG_DATE
                 FROM (
                      SELECT * FROM TB_VISIT_REQ
                        <if test="fil1 != null">
                            WHERE VISIT_REQ_STATUS = #{fil1}
                        </if>
                      ORDER BY IDX_VISIT_REQ DESC
                )
            )
            WHERE 1=1
            <if test="page_num != null and amount != null">
                AND idx_row_num <![CDATA[<=]]> #{page_num}*#{amount}
            </if>
        )
        <if test="page_num != null and amount != null">
            WHERE idx_row_num <![CDATA[>]]> (#{page_num} -1)*#{amount}
        </if>
    </select>
    <select id="getVisitReqCount" resultType="int">
        SELECT COUNT (*) FROM TB_VISIT_REQ
        <if test="fil1 != null">
            WHERE visit_req_status = #{fil1}
        </if>
    </select>

    <select id="getVisitData" parameterType="Date" resultType="kr.or.fact.core.model.DTO.VisitDataVO">
        SELECT * FROM TB_VISIT_DATA WHERE TO_CHAR(CUR_DATE , 'YYYYMMDD' ) = TO_CHAR( #{cur_date}, 'YYYYMMDD')
    </select>

    <select id="getMonthlyVisitData" parameterType="Date" resultType="kr.or.fact.core.model.DTO.VisitDataVO">
        SELECT * FROM TB_VISIT_DATA WHERE CUR_DATE BETWEEN TO_DATE(TO_CHAR(#{cur_date}, 'YYYY-MM-') || '01', 'YYYY-MM-DD') AND LAST_DAY(#{cur_date})
    </select>

    <select id="getDurationVisitData" parameterType="kr.or.fact.core.model.DTO.VisitDateVO" resultType="kr.or.fact.core.model.DTO.VisitDataVO">
        SELECT * FROM TB_VISIT_DATA WHERE CUR_DATE BETWEEN #{start_date} AND #{end_date}
    </select>

    <select id="getMonthlyVisitReq" parameterType="hashmap" resultType="kr.or.fact.core.model.DTO.VisitReqVO">
        SELECT * FROM TB_VISIT_REQ WHERE CUR_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-') || '01', 'YYYY-MM-DD') AND LAST_DAY(SYSDATE)
    </select>

    <select id="getVisitReqByIdx" parameterType="long" resultType="kr.or.fact.core.model.DTO.VisitReqVO">
        SELECT * FROM TB_VISIT_REQ WHERE IDX_VISIT_REQ=#{idx_visit_req}
    </select>

    <select id="getUserVisitReq" parameterType="hashmap" resultType="kr.or.fact.core.model.DTO.VisitReqVO">

        SELECT
            *

        FROM (
                 SELECT ROW_NUMBER() OVER(ORDER by #{order_field} DESC) AS row_num,
                         IDX_VISIT_REQ,
                             VISIT_REQ_NUM,
                     GROUP_NAME,
                     VISITOR,
                     RESULVATION_DATE,
                     VISITOR_COUNT,
                     VISITOR_MPHONE_NUM,
                     VISITOR_EMAIL,
                     VISITOR_ADRESS,
                     VISIT_GOAL,
                     QUESTION,
                     VISIT_REQ_STATUS,
                     IS_PRIVACY_ACCEPT,
                     IS_GROUP,
                     IS_CANCEL,
                     IS_MANAGER,
                     IDX_MANAGER,
                     IS_DURATION,
                     DURATION_AMOUNT,
                     MEMO,
                     IDX_VISIT_DATA,
                     IDX_USER,
                     IDX_ADMIN,
                     REG_DATE

                 FROM (
                          SELECT * FROM TB_VISIT_REQ  WHERE IDX_USER=#{idx_user}
                      )

                 WHERE ROWNUM <![CDATA[<=]]> #{page_num}*#{amount}
             )
        WHERE row_num <![CDATA[>]]> (#{page_num} -1)*#{amount}

    </select>


    <delete id="deleteVisitReq" parameterType="long">
        DELETE FROM TB_VISIT_REQ WHERE IDX_VISIT_REQ = #{idx_visit_req}
    </delete>

    <insert id="saveVisitData" parameterType="kr.or.fact.core.model.DTO.VisitDataVO">
        INSERT INTO TB_VISIT_DATA (
            IDX_VISIT_DATA,
            CUR_DATE,
            POSSIBLE_COUNT,
            RESULVATION_COUNT,
            IS_ADMIN_CANCEL,
            IMPOSSIBLE_REASON,
            VISIT_DATA_TYPE,
            MEMO,
            GROUP_IDX,
            IDX_ADMIN,
            REG_DATE
        ) VALUES (
                     SEQ_VISIT_DATA.NEXTVAL,
                     #{cur_date},
                     #{possible_count},
                     #{resulvation_count},
                     #{is_admin_cancel},
                     #{impossible_reason},
                     #{visit_data_type},
                     #{memo},
                     #{group_idx},
                     #{idx_admin},
                     SYSDATE
                 )

    </insert>

    <update id="updateVisitData" parameterType="kr.or.fact.core.model.DTO.DemoBusinessVO">
        UPDATE TB_VISIT_DATA SET
             CUR_DATE = #{cur_date},
             POSSIBLE_COUNT = #{possible_count},
             RESULVATION_COUNT = #{resulvation_count},
             IS_ADMIN_CANCEL = #{is_admin_cancel},
             IMPOSSIBLE_REASON = #{impossible_reason},
             VISIT_DATA_TYPE = #{visit_data_type},
             MEMO = #{memo},
             GROUP_IDX = #{group_idx},
             IDX_ADMIN = #{idx_admin}
        WHERE IDX_VISIT_DATA = #{idx_visit_data}
    </update>

    <update id="updateStatusInVisitData" parameterType="kr.or.fact.core.model.DTO.DemoBusinessVO">
        UPDATE TB_VISIT_DATA SET
                                 VISIT_DATA_TYPE = #{visit_data_type}
        WHERE IDX_VISIT_DATA = #{idx_visit_data}
    </update>

    <delete id="deleteVisitData" parameterType="long" >
        DELETE FROM TB_VISIT_DATA WHERE IDX_VISIT_DATA = #{idx_visit_data}
    </delete>


    <insert id="saveVisitReq" parameterType="kr.or.fact.core.model.DTO.VisitReqVO">
        INSERT INTO TB_VISIT_REQ (
            IDX_VISIT_REQ,
            VISIT_REQ_NUM,
            GROUP_NAME,
            VISITOR,
            RESULVATION_DATE,
            VISITOR_COUNT,
            VISITOR_MPHONE_NUM,
            VISITOR_EMAIL,
            VISITOR_ADRESS,
            VISIT_GOAL,
            QUESTION,
            VISIT_REQ_STATUS,
            IS_PRIVACY_ACCEPT,
            IS_GROUP,
            IS_CANCEL,
            IS_MANAGER,
            IDX_MANAGER,
            IS_DURATION,
            DURATION_AMOUNT,
            MEMO,
            IDX_VISIT_DATA,
            IDX_USER,
            IDX_ADMIN,
            REG_DATE
        ) VALUES (
                     SEQ_VISIT_REQ.NEXTVAL,
                     #{visit_req_num},
                     #{group_name},
                     #{visitor},
                     #{resulvation_date},
                     #{visitor_count},
                     #{visitor_mphone_num},
                     #{visitor_email},
                     #{visitor_adress},
                     #{visit_goal},
                     #{question},
                     #{visit_req_status},
                     #{is_privacy_accept},
                     #{is_group},
                     #{is_cancel},
                     #{is_manager},
                     #{idx_manager},
                     #{is_duration},
                     #{duration_amount},
                     #{memo},
                     #{idx_visit_data},
                     #{idx_user},
                     #{idx_admin},

                     SYSDATE
                 )
    </insert>
<update id="updateVisitReq" parameterType="kr.or.fact.core.model.DTO.VisitReqVO">
    UPDATE TB_VISIT_REQ SET VISIT_REQ_STATUS=#{visit_req_status}, RESULVATION_DATE=#{resulvation_date} where IDX_VISIT_REQ=#{idx_visit_req}
</update>

    <select id="getDateVisitReqList" resultType="kr.or.fact.core.model.DTO.VisitReqVO">
        SELECT * FROM TB_VISIT_REQ WHERE IS_DURATION = #{is_duration} AND RESULVATION_DATE = #{resulvation_date}
    </select>

    <select id="getGroupIdx" resultType="int">
        select seq_visit_data_group.nextval from dual
    </select>


    <select id="getVisitDataListByGroupIdx" parameterType="long" resultType="kr.or.fact.core.model.DTO.VisitDataVO">
        SELECT * FROM TB_VISIT_DATA WHERE GROUP_IDX=#{group_idx};
    </select>


</mapper>