SELECT *
FROM (
         SELECT ROW_NUMBER() OVER(ORDER by POSTING_START_DATE DESC) AS ROW_NUM
              ,IDX_BS_ANNOUNCEMENT
              , ANNOUNCE_NUM
              , SUBJECT
              , ANNOUNCE_STATUS
              , IS_FILE
              , IS_NEW
              , AUTHOR
              , POSTING_START_DATE
              , VIEW_COUNT
         FROM (
                  SELECT * FROM TB_BS_ANNOUNCEMENT WHERE IS_SHOW=1
                                                AND POSTING_START_DATE <= SYSDATE AND POSTING_END_DATE >= SYSDATE
              ) WHERE ROWNUM <=10
     ) WHERE ROW_NUM >0

SELECT TO_CHAR( TRUNC(SYSDATE,'year')+1,'YYYY-MM-DD HH24:MI:SS') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'YYYY')||'-01-01 00:00:00' FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YYYY')||'-12-31 23:59:59' FROM DUAL;

SELECT TO_CHAR(TRUNC(SYSDATE,'YYYY'),'YYYY-MM-DD') FROM DUAL;


SELECT * FROM TB_SCHEDULE_ITEM WHERE IDX_ADMIN = 0  OR  IDX_ADMIN = 0
SELECT * FROM TB_SCHEDULE_ITEM WHERE (IDX_ADMIN = 1 OR  IDX_ADMIN = 0) AND START_DATE BETWEEN TO_DATE( SYSDATE-5,'YYYY-MM-DD HH24:MI:SS') AND TO_DATE( SYSDATE+124,'YYYY-MM-DD HH24:MI:SS')+0.999999;

SELECT TO_DATE(TO_CHAR(LEVEL, '000'), 'DDD') FROM DUAL CONNECT BY LEVEL <= TO_NUMBER(TO_CHAR(TO_DATE('12-31', 'MM-DD'), 'DDD'));

SELECT * FROM TB_SCHEDULE_ITEM WHERE IDX_ADMIN = 1  OR  IDX_ADMIN = 0 AND START_DATE BETWEEN TO_DATE('01-01', 'MM-DD') AND TO_DATE('12-31', 'MM-DD');


select
    *
from(
        select
            *
        from TB_ENV_DATA
        where (GUYOK, IDX_TB_ENV_DATA) in (
            select GUYOK, max(IDX_TB_ENV_DATA) as IDX_TB_ENV_DATA
            from TB_ENV_DATA A group by GUYOK
        )
        order by GUYOK ASC
    ) t
group by t.GUYOK

SELECT
    *
FROM (
         SELECT ROW_NUMBER() OVER(ORDER by IDX_TB_ENV_DATA DESC) AS ROW_NUM
              ,A.*
         FROM (
                  SELECT * FROM TB_ENV_DATA
                  WHERE GUYOK=1

                  ORDER BY IDX_TB_ENV_DATA DESC
              ) A
         WHERE ROWNUM <=10
     )
WHERE ROW_NUM > 0


SELECT * FROM (
                  SELECT ROW_NUMBER() OVER(ORDER by IDX_SMS_TEMPLATE DESC) AS ROW_NUM
        ,A.*
FROM (
    SELECT
    *
    FROM TB_SMS_TEMPLATE
    ORDER BY IDX_SMS_TEMPLATE DESC
    ) A
WHERE ROWNUM <=10
    )
WHERE ROW_NUM > 0

SELECT * FROM(
    SELECT ROW_NUMBER() OVER(ORDER by SEND_DATE DESC) AS ROW_NUM,
    A.*
FROM(
        SELECT
            *
        FROM SDK_SMS_SEND
    ) A
WHERE ROWNUM <=10
    )
WHERE ROW_NUM > 0


SELECT (SELECT COUNT(*) FROM TB_ADMIN ) AS TOT_COUNT,
       (SELECT COUNT(*) FROM TB_ADMIN WHERE ADMIN_TYPE <  2)  AS CONSOLE_USER_COUNT,
                                          (SELECT COUNT(*) FROM TB_ADMIN WHERE ADMIN_TYPE <  8 AND  ADMIN_TYPE >=  2 )AS CONSOLE_ADMIN_COUNT,
                                          (SELECT COUNT(*) FROM TB_ADMIN WHERE ADMIN_TYPE < 16 AND  ADMIN_TYPE >=  8 ) AS ADMIN_USER_COUNT,
                                          (SELECT COUNT(*) FROM TB_ADMIN WHERE ADMIN_TYPE >= 16 ) AS SUPER_ADMIN_COUNT
           FROM TB_ADMIN WHERE ROWNUM = 1


SELECT
    *
FROM (
         SELECT ROW_NUMBER() OVER(ORDER by IDX_USER DESC) AS ROW_NUM,
        A.*
FROM (
    SELECT * FROM TB_USER
    WHERE USER_TYPE != 1
    ) A
WHERE ROWNUM <=10
    )
WHERE ROW_NUM > 0


SELECT
    ROW_NUMBER() OVER(ORDER by POSTING_START_DATE DESC) AS ROW_NUM,
    A.*
    /*IDX_NOTICE,
    NOTICE_CODE,
    NOTICE_NUM,
    SUBJECT,
    NOTICE_CONTENTS,
    IS_FILE,
    IS_NEW,
    IS_MAIN_PAGE,
    IS_IMPORTANT,
    IS_SHOW,
    VIEW_COUNT,
    NOTICE_STATUS,
    POSTING_START_DATE,
    POSTING_END_DATE,
    DOC_VERSION,
    MEMO,
    SEARCH_TAG,
    AUTHOR,
    IDX_ADMIN,
    CONFIRM_ADMIN_IDX,
    REG_DATE,
    LAST_UPD_DATE*/
FROM
    (SELECT * FROM TB_NOTICE) A
WHERE A.IS_SHOW=1
  AND A.POSTING_START_DATE<= SYSDATE AND A.POSTING_END_DATE >= SYSDATE

SELECT
    *
FROM (
         SELECT
             ROW_NUMBER() OVER(ORDER by POSTING_START_DATE DESC) AS ROW_NUM,
             A.*
         FROM
             (SELECT * FROM TB_NOTICE
              WHERE IS_SHOW=1
                AND POSTING_START_DATE <= SYSDATE AND POSTING_END_DATE >= SYSDATE
                 ) A
WHERE ROWNUM <=10
    )
WHERE ROW_NUM > 0


SELECT
    *
FROM (
         SELECT ROW_NUMBER() OVER(ORDER by IDX_CONSOLE_NOTICE DESC) AS ROW_NUM
              ,t.*
            FROM TB_CONSOLE_NOTICE t
         WHERE ROWNUM <=10
     )
WHERE ROW_NUM > 0


SELECT
     AVG(XINTEMP)

FROM (

         SELECT
             *
                FROM TB_ENV_DATA
         WHERE GUYOK=1 AND
         ORDER BY IDX_TB_ENV_DATA DESC
     ) A
WHERE ROWNUM <= 10



    SELECT SUBSTR(B.YMDT, 15, 16) AS YMDTIME, TRUNC(AVG(XINTEMP1),2) AS XINTEMP1, TRUNC(AVG(XINHUM1),2) AS XINHUM1 FROM (
        SELECT SUBSTR(YMDTIME, 0, 16) AS YMDT, AVG(XINTEMP1) AS XINTEMP1,AVG(XINHUM1) AS XINHUM1
        FROM TB_ENV_DATA WHERE GUYOK=1 AND TO_DATE(YMDTIME, 'YYYY-MM-DD HH24:MI:SS')
        BETWEEN TO_DATE('2023-02-01 00:00', 'YYYY-MM-DD HH24:MI') AND TO_DATE('2023-02-28 23:59', 'YYYY-MM-DD HH24:MI')
        GROUP BY YMDTIME
        ) B
    GROUP BY B.YMDT ORDER BY B.YMDT ASC



SELECT * FROM(
                 SELECT ROW_NUMBER() OVER(ORDER by GUYOK DESC) AS ROW_NUM,
                     A.*
FROM(
    SELECT
    *
    FROM TB_FARM_SECTOR SECTR
    INNER JOIN TB_USER_DEMO_BS DEMO ON SECTR.IDX_USER_DEMO_BS = DEMO.IDX_USER_DEMO_BS
    WHERE DEMO.USER_DEMOBS_STATUS >= 40 AND DEMO.USER_DEMOBS_STATUS <= 50
    ORDER BY SECTR.IDX_USER_DEMO_BS DESC
    ) A
                 WHERE ROWNUM <=10
             )
WHERE ROW_NUM > 0

SELECT *
FROM (
         SELECT SUBSTR(YMDTIME, 1, 10) as dt,
                CASE
                    WHEN SUBSTR(YMDTIME, 15, 2) < '10' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':00')
                    WHEN SUBSTR(YMDTIME, 15, 2) >= '10' AND SUBSTR(YMDTIME, 15, 2) < '20' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':10')
                    WHEN SUBSTR(YMDTIME, 15, 2) >= '20' AND SUBSTR(YMDTIME, 15, 2) < '30' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':20')
                    WHEN SUBSTR(YMDTIME, 15, 2) >= '30' AND SUBSTR(YMDTIME, 15, 2) < '40' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':30')
                    WHEN SUBSTR(YMDTIME, 15, 2) >= '40' AND SUBSTR(YMDTIME, 15, 2) < '50' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':40')
                    WHEN SUBSTR(YMDTIME, 15, 2) >= '50' AND SUBSTR(YMDTIME, 15, 2) < '60' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':50')
                END AS hhmm,
                ROUND(AVG(XINTEMP1),2) AS XINTEMP1,
                ROUND(AVG(XINTEMP2),2) AS XINTEMP2,
                ROUND(AVG(XINHUM1),2) AS XINHUM1,
                ROUND(AVG(XGNDTEMP),2) AS XGNDTEMP,
                ROUND(AVG(XGNDHUM),2) AS XGNDHUM,
                ROUND(AVG(XCO2),2) AS XCO2,
                ROUND(AVG(XWATERTEMP),2) AS XWATERTEMP,
                ROUND(AVG(XWATERTEMP2),2) AS XWATERTEMP2,
                ROUND(AVG(XDHUM),2) AS XDHUM,
                ROUND(AVG(XOUTTEMP),2) AS XOUTTEMP,
                ROUND(AVG(XWINDDIREC),2) AS XWINDDIREC,
                ROUND(AVG(XWINDSP),2) AS XWINDSP,
                ROUND(AVG(XSUNVOL),2) AS XSUNVOL,
                ROUND(AVG(XSUNADD),2) AS XSUNADD,
                ROUND(AVG(XVENTTEMP),2) AS XVENTTEMP,
                ROUND(AVG(XHEATTEMP),2) AS XHEATTEMP,
                ROUND(AVG(XABHUM),2) AS XABHUM,

                CEIL(AVG(XSKYVOL1)) AS XSKYVOL1,
                CEIL(AVG(XSKYVOL2)) AS XSKYVOL2,
                CEIL(AVG(XCUR1VOL)) AS XCUR1VOL,
                CEIL(AVG(XCUR2VOL)) AS XCUR2VOL,
                ROUND(AVG(X3WAY1VOL)) AS X3WAY1VOL,
                ROUND(AVG(X3WAY2VOL)) AS X3WAY2VOL,
                ROUND(AVG(XEC1)) AS XEC1,
                ROUND(AVG(XEC2)) AS XEC2,
                ROUND(AVG(XPH1)) AS XPH1,
                ROUND(AVG(XPH2)) AS XPH2
         FROM TB_ENV_DATA ENV
         WHERE GUYOK=1 AND TO_DATE(YMDTIME, 'YYYY-MM-DD HH24:MI:SS')
             BETWEEN TO_DATE('2023-02-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE('2023-02-28 23:59:00', 'YYYY-MM-DD HH24:MI:SS')
         GROUP BY SUBSTR(YMDTIME, 1, 10),
                  CASE
                      WHEN SUBSTR(YMDTIME, 15, 2) < '10' then CONCAT(SUBSTR(YMDTIME, 12, 2), ':00')
                      WHEN SUBSTR(YMDTIME, 15, 2) >= '10' AND SUBSTR(YMDTIME, 15, 2) < '20' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':10')
                      WHEN SUBSTR(YMDTIME, 15, 2) >= '20' AND SUBSTR(YMDTIME, 15, 2) < '30' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':20')
                      WHEN SUBSTR(YMDTIME, 15, 2) >= '30' AND SUBSTR(YMDTIME, 15, 2) < '40' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':30')
                      WHEN SUBSTR(YMDTIME, 15, 2) >= '40' AND SUBSTR(YMDTIME, 15, 2) < '50' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':40')
                      WHEN SUBSTR(YMDTIME, 15, 2) >= '50' AND SUBSTR(YMDTIME, 15, 2) < '60' THEN CONCAT(SUBSTR(YMDTIME, 12, 2), ':50')
                  END
        ORDER BY dt DESC
     )
WHERE ROWNUM<=20
